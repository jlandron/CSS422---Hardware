00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/23/2019 2:28:09 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :HW1P5
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000  43F9 00001054             11      LEA     START_MSG,A1    *Print prompt
00001006  103C 000E                 12      MOVE.B  #14, D0
0000100A  4E4F                      13      TRAP    #15
0000100C                            14      
0000100C  103C 0004                 15      MOVE.B  #4,D0           *prepare to take first keyboard entry
00001010  4E4F                      16      TRAP    #15
00001012  1401                      17      MOVE.B  D1,D2           *Store first number in D2
00001014  4E4F                      18      TRAP    #15  
00001016  1601                      19      MOVE.B  D1,D3           *Second number is stored in D3
00001018                            20      
00001018  D602                      21      ADD.B   D2,D3           *the result is stored in D3
0000101A  6920                      22      BVS.S   OVERFLOW        *check for overflow, print message if there is
0000101C                            23      
0000101C                            24      
0000101C                            25          
0000101C                            26      
0000101C  11C3 6000                 27  RESULTS     MOVE.B  D3,$6000        *Move result into memory
00001020  4281                      28              CLR.L   D1              *clear D1 becasue the trap function fills it with F's
00001022  1238 6000                 29              MOVE.B  $6000,D1        
00001026  43F9 00001095             30              LEA     ANSWER,A1
0000102C  103C 000E                 31              MOVE.B  #14,D0
00001030  4E4F                      32              TRAP    #15
00001032  103C 0003                 33              MOVE.B  #3,D0           *print result
00001036  4E4F                      34              TRAP    #15
00001038                            35      
00001038                            36  
00001038  FFFF FFFF                 37      SIMHALT           ; halt simulator
0000103C                            38  *------------------------------------------------------------
0000103C                            39  *   Save processor state and print message,then return
0000103C                            40  *------------------------------------------------------------
0000103C                            41      
0000103C  48E7 FF7E                 42  OVERFLOW    MOVEM.L A1-A6/D0-D7,-(SP)
00001040  43F9 000010B1             43              LEA OF_MSG,A1
00001046  103C 000E                 44              MOVE.B  #14,D0
0000104A  4E4F                      45              TRAP    #15
0000104C  4CDF 7EFF                 46              MOVEM.L (SP)+,A1-A6/D0-D7
00001050  4EF8 101C                 47              JMP     RESULTS
00001054                            48              
00001054                            49  
00001054                            50  * Put variables and constants here
00001054  =0000000D                 51  CR          EQU     $0D         *Carriage return
00001054  =0000000A                 52  LF          EQU     $0A         *Line feed
00001054= 48 65 6C 6C 6F 2C ...     53  START_MSG   DC.B    'Hello, type two decimal numbers to be added in my 16bit system',CR,LF,0
00001095= 0D 0A 54 68 65 20 ...     54  ANSWER      DC.B    CR,LF,'The answer recieved is : ',0
000010B1= 4F 56 45 52 46 4C ...     55  OF_MSG      DC.B    'OVERFLOW OCCURED, RESULT NOT CORRECT!',0
000010D7                            56          
000010D7                            57      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANSWER              1095
CR                  D
LF                  A
OF_MSG              10B1
OVERFLOW            103C
RESULTS             101C
START               1000
START_MSG           1054
